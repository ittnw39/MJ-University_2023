0315 절차프

데이터 타입 - 전기 신호를 저장하고 있음.

컴퓨터를 구성하는 가장 작은 요소는 비트이다. 비트는 뭔가를 저장할 수 있는 공간이다. 0과 1울 저장할 수 있다.
0과1로는 많은 경우의 수를 만들어낼 수 없다. 소통을하려면 경우의 수가 많아야한다.
상대방과 번호가 같아야 소통을 할 수 있다.
자릿수를 늘려서 바이트 단위를 만들었다. 컴퓨터가 처리하는 가장 작은 단위를 바이트라고 한다. 시피유나 버스에 ㄷ이터가 이동하거니 저정할떄 바이티로 된다. 1바이트는 8비트이다.
사람과 소통할 수 있는 언어를 컴퓨터가 받아들이고 울에게 다시 보여줄 수 잇어애한다.
모든 컴퓨터에 들어가는 프로그램에 0,1로 들어갔다가, 이제는 자연어를 직접 입력할 수 있게되었다.
우리가 가장 기본적으로 컴퓨터와 소통하기 위해 필요한 것은 컴퓨터가 글자를 알아야한다는 것이다. 컴퓨터가 모든 글자를 일련번호를 매겼다. 이것이 아스키코드이다.
외국어까지 모두 포함하는 유니코드가 생겼다.

문자를 표현하기위해 내부에 저장할 때 캐릭터타입을 쓴다. (문자타입)
타입은 무엇으로 결정되냐면, 크기가 얼마인지 혹은 내부에 어떤 형태로 구성되어 있는지로 결정한다.
크기와 내부 형태 -> 컴퓨터의 데이터 타입을 결정한다.
코드는 우리가 아는 모든 글자를 일련번호를 만들어놓았다. - 캐릭터타입
캐릭터타입은 ㅏ이즈가 1바이트에서 4바이트까지 쓴다.
아스키코드는 0-127까지 쓴다. 표준 아스키코드가 8비트를 쓰면 무조건 첫번쨰 비트가 0이다. 첫번째 비트가 1이면 외국어이다. 1이면 어떤 코드를 쓰고 어떤 코드표를 찾아야하는지 찾기 시작한다.

내가 폰트를 찍을때 코드표를 찾아서 폰트를 보여주는 것이다.

캐릭터타입은 문제가 있다. 컴퓨터느 계산을 하는데, 0이 코드표(문자)의 0인지 값의 0인지 헷갈린다는 것이다. 아스키코드의 문자는 0은 무조건 따옴표를 친다.
16진법 - 진법으로 표현할 때 앞에 0을 쓰고 진법을 영어와 캐릭터로 쓴다. 0
2진법 - 3 - 0010, 5 -0101
16진법은 2비트로 보인다.
10진법은 비트가 어떻게 생겼는지 확인하기 힘들다.

16진법으로 61은 소문자 a, 20은 스페이스, 0은 30, 41은 대문자 A
언어적 문자를 집어넣기 시작했고 그 타입을 캐릭터타입이라고한다. 문자라고 한다.

--

데이터 타입 중에 숫자가 있어야 계산을 할 수 있다.
로직 연산자의 피연산자는 true, false를 대응 시켜놓음.
문자, 숫자, boolean value.
관계 유닛 - 뺄셈으로 해결
3가지 데이터 타입이 있는 것이다.

초기 컴퓨터는 계산만 하다가, 프로그램이 저장되고 흐름이 제어되면서 우리의 말을 알아듣게 된다.
오감과 서로 상호작용하기 시작했다. 이것도 다 계산에 포함되는 것이다.

number -
종류가 크게 두가지로 나뉜다. 정수와 실수, int와 float.
내부적으로 표현방법이 다르다. 비트를 저장하는 방법이 다르다. 값을 저장하는 방법이 다르다.

int --
정수는 기본적으로 2진법으로 크기를 저장하고 있다. 0이면 그냥 0. 코드가 아니기 떄문에 값만 저장하고 있다.
기본이 4바이트, 8바이트도 있다.
2의 32승 가지를 표현할 수 있다.
1024 = 1k (천배k)
m, g, t.. (1000씩, 2의10승, 1024)- 1000이 딱 언떨어져서 1024로 계산

4기가 

마이너스까지 표현하면 경우의 수 40억개 표현 가능. 0이 중간에 있다.
-20억 + 20억 까지

단위가 동양에서는 4자씩 끊었다. 4단위씩 만들어놓음. 영어권에서는 3자리씩  끊는다. 콤마로 구분. t,m,b,..
키로바이트, 메가, 기가, 헥타,, 천씩 끊어져있다.
1000분의 1은 밀리, 100만 분의 1은 마이크로 10억분의 1은 나노.. 더 큰 단위로 다 조사하기

10년단위로 단위가 바뀐다.

40년동안 1조배가 더 늘어났다.

2바이트, 4바이트, 8바이트가 있고 보통 4바이트,long - 8바이트,short - 2바이트 순서로 많이 쓴다.

------

float 실수 --

12.345 - 점은 어떻게 메모리에 찍는가?
0.12345로 바꾼다. - 노멀라이징
항상 소수점 이하부터 시작하게 만든다.
12345와 1을 저장해놓는다.
소수점이 보통 계산보다 시간이 오래걸린다.
실시간으로 빠르게 요구된ㄴ 곳은 정수로 만들어서 계산학 만든다. 정수 계산이 훨씬 빠르기 때문이다.

실수는 3가지 파트가 있다.
싸인, 플렉션(값), 지수
8비트로 지수 표현.

실제로는 2진법으로 들어간다.

문제는 2진법에서 소수점이 16진법과 맞아떨어지지 않는다.

실수계산에서 오차가 발생할 수 있다. 

-- 음수를 표현하는 방법
5 -> 0101 -> 1011(음수는 첫비트가 1.)
양수는 첫비트를 비워놓고 반만 쓴다. 0에서 32승-1까지 쓴다.
2의 보수로 더하기를 통해 빼기를 할 수 있다. 음수를 더할 수 있다.
정수에서는 빼기가 없고, 덧셈만 있는데 음수만 잇으면 빼기가 필요없다.
alu에 빼기가 없다.

2의 보수 계산, 단위 보고서에...

과제----

키보드에서 숫자 2개가 아스키 코드로 들어오고 정수로 바꾸기.
숫자 2개를 더한다. 계산은 int, 결과는 아스키코드로 찍기.

+ 계산기 만들어보기
+ 그 다음이 수강신청시스템