0417 절차프

과제 - 용어집 만들기.

엔터프라이즈 아키텍처의 기본적인 구조 - 인포메이션 시스템 - 정보 처리 시스템
정보는 우리가 만들어 놓은 가상의 현실이다. 은행은 전형적인 가상의 세상이다. 모든 것이 재화로 표현됨.
현실하고의 접점이 없으면 쉽다. 그러나 자동차나 로봇의 경우 현실과 가깝다.

저장되는 공유 데이터를 이용해서 무언가 결과를 얻어낸다.

메타버스 - 가상과 현실이 연동됨. 쇼핑이나 배달앱 등.. 가상의 세계에서 정보처리가 이루어짐.
점점 온라인으로 들어오고 있다.

수강신청시스템은 쇼핑시스템하고 같다. 장바구니.. 수강신청(구매), 제약조건이 있음.
전체적인 아키텍처의 패턴은 쇼핑몰이나 수강신청, 예약, 은행, 카드 등 거의 같다. 특색이 조금 다를 뿐이다.
SI업체에 보통 외주를 맡김. 대행에서 개발해줌. 대기업은 내부 시스템이 있다.

main 이 p로그인에게 로그인하냐고 물어봄. p는 새로운 화면을 띄운다. 

----수강신청 시나리오 요약 summary
딕셔너리를 만든다. - 용어집 정리 - 모드 소프트웨어의 시작.
우리가 신청하는 것은 과목이 아니라 강좌. 강좌는 과목의 인스턴스. 실체. 과목에 시간과 강사와 강의실이 할당되어 열리는 것이 강좌이다.
과목은 계획만 있는 것. 파일. 렉쳐는 실체.

1. 수강 예정 강좌를 선택 (=수강신청)
2. 강좌 선택(복잡)
3. 미리담기
4. 신청

요약을 할 때에는 구체적인 알고리즘, 찾는 방법이 나와야 한다.
요약을 할 때에는 중심이 되는 시나리오가 뽑히고 그 안에서 명사를 뽑아낸다. 명사는 키워드. 키워드를 가지고 전체 스토리가 전개되면 그 키워드가 맞는 것이다.

전체를 설명할 수 있는 스토리가 나와야 한다. 수강은 강좌를 선택하는 것이다. 키워드는 강좌, 선택
선택은 동사. 강좌는 명사. 강좌는 과목의 인스턴스이다. 강좌와 과목간의 관계. 괴목이 강좌가 되려면..?
스토리는 범위가 매우 넓다. 베리에이션으로 생각하면 너무 복잡해서 아키텍처(흔들리지 않는 부분)을(뷰, 컨트롤러,..) 잘 가지고 있어야 한다. 아키텍처를 얼마나 잘 응용하느냐에 따라 일의 효율이 달라진다.

---

강좌 선택의 제약 조건--

복잡도를 줄이는 방법 - 나눔. 분류. 나누는데에 기준이 있어야 한다. 구조를 만들어야 한다.
구조 중에서 트리 구조. 

집합을 만들어놓으면 (안보이는 주머니) 중복이 발생한다.

작은 규모는 순차적으로 일렬로 세움. 이것이 최초의 구조. - 리니어 리스트

자료 구조 - 트리 구조.

하나의 부모로 가는 구조를 트리라고 한다. 

구조를 만들 때는 정보가 저장되어있는 노드와 그것을 연결하는, 찾아가는 길은 링크
길에는 방향성이 있다. 화살표를 그렸을 때 한 쪽은 부모, 한 쪽은 자식이다. 노드 링트를 아무 제약 조건 없이 연결되는 것이 그래프이다.
트리는 부모가 하나인 그래프이다.
만약 부모가 둘이면 찾는 길이 두가지가 생긴다. n개. 그래서 어디로 가야할지에대한 확정적 결과를 가져오지 못한다. 의미가  여러개 생김.

트리는 함수적 의미와 연결되어 있다. 인풋이 여러개가 들어가면 결과가 하나여야 한다.

트리구조는 확정적 결과를 만들어낼 수 있다. 결과가 하나가 나오면 모호성이 없다. 그래서 트리는 주소가 확정적이다.
트리구조로 찾아가면 로그가 매우 줄어든다.

서로 겹치지 않는 집합으로 나눠가면 하나로 갈 수 있다.
요약도 추상화의 정도가 높은 단어로 나눠야한다.


추상화시켜서 정리하는 방법 중 최고는 트리 구조이다. 그래프는 모호성이 생긴다. 너무 많은 경우의 수가 생겨버린다.
요즘은 컴퓨터가 매우 많은 계산을 해서 빅데이터 등을 만들어낸다. 전체적으로 큰 것을 파악할 수 있다. 요즘에는 관계가 중요하다. 딥러닝은 확률분포에 가깝다. 맞을 수도 있고 틀릴 수도 있다는 단점이 있다.
챗지피티는 모른다는 것을 모른다. 확률분포로 계산하기 때문이다.

수강신청을 할 때 어떻게 검색을 할 것인가? - 일반적으로 트리 구조를 쓴다.

어떻게 트리구조를 만들것인지에대해 고민해보기

과제 - 수상신청 강좌 선택의 트리 구조를 만들어보기.

왼쪽에 한번에 몇개를 놓을 것인지.. 뎁스가 아주 깊진 않다.

왼쪽에는 트리가 표현되어 있지만 많이 있지는 않다. 최대 5개

보통 사람이 한번에 기억할 수 있는 갯수를 가지고 사용자 인터페이스를 디자인한다.

스토리 만들기.

제약 조건
수강인원제한,동시접속한계,시간제한-시스템 다운, 시간표 중복,  시간표 시간대 중복, 선수과목, 학점 초과. - 알고리즘. 기능의 제공 문제.

제약은 부사. 기능은 동사. 기능을 제약하는 것. 제약 조건 = 품질
품질이 제약 조건을 만족하는 것이 품질이다.
빠른 자동차
빨리 가는 자동차
싼 자동차
싸게 파는 자동차


트리는 어떤 것을 찾아가는 길이 하나밖에 없는 구조이다. 
 
제약 조건은 constrate, 퀄리티 애트리 뷰트 - 품질 속성

수강 인원 제한은 강좌가 가지고 있어야 한다. 학점 초과는 내 계정이 가지고 이썽야한다. 선수과목은 과목(타입)이 가지고 있다.
동시접속은 시스템이 가지고 있다. 제약 조건과 기능이 안쪽에 들어가야 해서 클래스가 생겨야 한다.

강좌, 과목, 계정 // 시스템
업무를 나눠야 한다. 어떠한 분야의 업무적인 이야기(도메인적 관점)와 컴퓨터 문제(테크니컬 관점)를 분리해서 생각해야 한다.

수강인원제한, 시간표 중복, 선수 과목은 업무적인 이야기, 특 정분야의 지식이다. - 도메인 널리지

<먼저 도메인 관점으로 업무적 시스템 정리>

도메인 오브젝트 - 강좌, 계정, 과목, 시간표, 미리담기 << 먼저 시작.
테크니컬 오브젝트 - 데이터 베이스, 파일, 윈도우, 통신

시나리오를 쓸 때는 주요 시나리오의 시간적 절차를 만들기.
여러개의 동사를 하나에 함축하는 것이 관계이다.

1. 시나리오(시간적 흐름, 절차적) - 범위가 넓어서 요약 불가
2. 명사(키워드) 추출, 관계 만들기(단어집 만들기)
3. 다시 정리(시나리오 구체화)

------이퀄리티------

같다는 것이 무엇인가?

학생이라는 변수
학생이라는 오브젝트 = 메모리에 할당됨. new, 주소가 필요하다.

쓰려면 몇번지인지 알아야한다.

학생이 100번지라고 번역해서 쓴다.

스튜던트1은 주소를 담는 그릇. 포인터

new는 클래스에게 부탁해서 필요한 메모리를 할당. 클래스안에 new라는 함수를 가지고 있다. 클래스는 오브젝트를 만들어낼 수 있다. 그 함수가 new이다.

new는 주소를 리턴한다. 객체와 객체의 이름이 바인딩 된다.

오브젝트의 이름만 만들어졌다.

이름인지 실체인지 불분명하다.

우리가 쓰는 학생1이라는 캐릭터 스트링을 말하기도 한다. 컴퓨터의 시피유는 이름이 무엇인지 관심없고, 주소로 대체 시킨다.

1. 캐릭터 스트링
2. 200번지 (주소) - 시피유
3. 실체 오브젝트 

==는 주소가 같은지 물어보는 것.

