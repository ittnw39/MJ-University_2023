0322 절차프

엔지니어는 경제적 가치를 창출함.

chat gpt 보고서에 쓰기

오늘 주제는 액스트렙션

추상화

사람이 기억을 한다는 것은 오감을 통해서 보고 머리속에 집어넣는 것이다. 어떻게 머리 속에 들어갈까?
어릴 때는 처음에는 2차원의 화면으로 보인다. 사람은 머리를 100퍼센트 쓴다. 어떻게 기억하냐면, 왔다가는 색 중에서 비슷하고 반복되면 색을 추출해내는데 , 이를 앱스트랙션이라고 한다.
인지는 오감을 통해 들어온 정보를 어떻게 쓸모있는 것으로 만드느냐인 것이다.
4살 정도되면 수많은 사진에서 공통성을 뜯어낸다.
붕어빵을 자주 먹다보면 붕어빵기계를 만들어낼 수 있다. 이를 앱스트랩션 타입이라고한다.

오감으로 들어온 데이터를 만들어낼 수 있는 데아터를 만든다. 메타 데이터

사람을 자꾸보면 사람이라는 타입을 만들어낸다.

일반 명사는 실제 사람을 만들어낼 수 있는 정보를 얻는다. 키, 몸무게 등을 대입하면 사람이 만들어짐.
인간의 지능은 기억이 아니라 데이터를 만들어낼 수 있는 메타 데이터를 가지고 있다. 이를 가지고 있으면 수많은 실체들을 만들어낼 수 있게된다.
프로그램에서 정수라는 개념을 알면 무한대의 숫자를 만들어낼 수 있고 , 다시 정수로 만들어낼 수 있다.

프로그램을 만드는 프로그램을 가지고 있는 것이다.

시피유가 타입을 만들어내는 프로그램을 장착하고 있다.

동물들도 프로그램이 머리속에 장착되어 나온다. 
사람은 프로그램이 아니라 메타프로그램을 가지고 있다. 인지능력이라고 한다.
오감으로 들어온 정보를 재사용가능한 형태로 기억하는 것이다. - 메타 인스턴스
가장 중요한 특징 중하나는 타입을 만드렁내는 것이다. 이것으로 새로운 것을 보면 가진 것으로 적용할 수 있다.
예측 할 수 없는 것이 무섭다. 사람의 인지는 예측 가능한 형태를 뇌에 집어넣고 예측하는 것이다.


두 번째 특징
common 공통적인 값을 가지고 있다. 사람은 머리털이 있고 여자는 길고 남자는 보통 짧다.. 공통적인 실체적 속성.
제너럴라이제이션
이렇게 하는 이유는 재사용하기 위함이다. 재사용은 예측하기 위한 것이다.
머릿 속에 타입이 명료하게 정리되어있어야한다.

객체 지향에서는 클래스가 타입이고 실체가 오브젝트이다. 일반적으로는 타입과 인스턴스라고 이야기한다.
타입은 인스턴스를 만들어내고, 오브젝트는 객체지향 프로그래밍에서 쓴다.

함수는 규칙을 만드는 것. 무언가가 변형되는 시간적 흐름의 규칙을 만들어내는 것이다.
규칙은 여러군데 적용하기 위해 만든다. 궁극적으로 동사이다. 입력이 있어야하고 출력이 있어야한다. 입력이 되었을 때 출력을 예측하는 규칙이다. 시간 , 변화
이를 측정해놓은 것이다.
함수는 내가 가진 무엇을 바꾸는 것이다. 이가 여러군데 쓰이기 위해서 하나의 단어로 정의한다. 동사는 명사,주어의 상태를 변화시킨다.

문법은 심볼(음절, 문자)과 규칙이 들어간다. 문자를 나열하는 규칙이다. 행위적 앱스트랙션, 행위의 축약 = readInt함수

심볼과 문법과 구조를 준다. 내부에서 컴퓨터가 int로 바꾼다. 파싱.
컴파일러가 하는 일 - 자바 코드는 다 아스키코드, 일종의 언어. 이를 문법적 구조로 바꿔서 시피유 문법 구조로 바꾼다.
시피유가 실행할 수 있는 언어를 만들어 낸다. 동사는 무언가 실행하는 데 필요한 정보를 전달하는 것이다. 명사는 구조적으로 어떻게 생겼느냐에 대한 것이다.
- 내가 동사 readInt를 만들었다.

함수라는 것은 뭔가 입력을 주면 결과를 줘여한다. 리턴은 계산 결과를 반환해주는 것이다. 타입에 맞춰서 결과를 반환해야한다.

바깥에서는 괄호 사이가 공유 영역이다. 어떤 값의 생명 주기는 괄호안에서 태어나서 괄호가 끝나면 죽는다. 그래서 바깥에서 안보인다.
뉴는 프로그램이 끝까지 살아있다.

클래스가 명사, 함수가 동사, 형용사를 만들어야한다.
동사는 명사가 잇어야 재활용할 수 있다. 명사는 그 자체로 재활용 할 수 있다. 클래스 위주로 하는 것이 객체지향, 객체지향은 명사를 중심으로 하는 것이다.
타입을 통해 오브젝트를 만들어내고 오브젝트로 실체를 만들어낼 수 있다.
어떤관점에서 설명하느냐에 따라 의미가 달라진다. 1. 구조적으로 설명 2. 행위적으로 설명
뭔가를 정의한다는 것은 구조적 특성과 행위적 특성을 따로따로 설명하는 것이다.

누군가에게 말할 때 말이나 미디어가 필요하다. 컴퓨터가 뭔가를 하게 만드려면 알아듣도록 적어야한다. 시피유는 인스트럭션을 읽고 메모리에 데이터타입으로 저장된다.
프로그래머는 이해안할 수가 없다.
설명할 수 있어야 이해한 것이고 이해해야 코드를 작성할 수 있다.

과제 어려움..

연산자가 앞에 있는 프랙티스 오퍼레이션
이렇게 하면 괄호가 필요없다.
더하기는 두개의 오퍼랜드를 더하는 것. 더하기도 인티저이다..
계산기를 만들기
1. 표현식을 입력하세요
2. +3*4/5
3. = 누르면 결과나오기
- 안되면 사칙연산만 하기