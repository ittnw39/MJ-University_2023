요구사항을 수집하고 분석하여 소프트웨어를 설계, 구현, 테스트하는 것이 일반적인 소프트웨어 개발 과정입니다.
사용자의 요구사항은 현실 세계의 특정한 공간과 사용자의 문맥에 기반하며,
이를 통해 시스템의 경계를 정의합니다.

요구사항을 정의할 때 사용자와 시스템의 상호작용에 관한 시나리오를 작성하며,
이 과정에서 도메인 엑스퍼트의 지식이 중요합니다.
예를 들어, 학생이 온라인 학습 플랫폼에서
강좌를 선택하는 시나리오에서는 사용자 입력(강좌 검색, 캠퍼스 선택 등)과 시스템 반응(강좌 리스트 출력 등)이 이러한 상호작용을 구성합니다.

이후에는 분석 단계로 넘어갑니다.
시스템이 동작하게 만드는 업무의 내용을 이해해야 하며, 이를 위해 도메인 지식이 필요합니다.
시스템이 데이터베이스를 관리하며 데이터를 읽고, 쓰고, 업데이트하는 것은 개발자의 역할입니다.

자연어를 기반으로 세상을 표현하는 것이 일반적이지만, 복잡한 세상의 규칙을 특정 관점에서 분해하는 것이 중요합니다.
이를 위해 함수와 알고리즘이 사용되며, 이들은 입력과 출력을 통해 특정 결과를 생성합니다.
결과가 확정적이지 않은 경우, 즉 하나의 문장이 두 개의 결과에 대응하는 경우 모호함이 증가하며, 이를 관리하는 것도 중요합니다.

수강신청, 미리담기, 강좌 검색 등의 기능을 제공하는 서비스를 개발하는 것이 목표입니다.
이러한 기능들은 데이터 플로우 다이어그램(DFD)로 표현될 수 있으며,
이는 함수나 기능, 알고리즘의 표현 방법 중 하나입니다. 

마지막으로, CRUD(Create, Read, Update, Delete)는 모델의 함수로서 일반적으로 사용되며,
이를 통해 서비스의 기능을 일반화하여 사용할 수 있습니다.
